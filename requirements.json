[
    {
        "Name": "Proxy",
        "Type": "PreInstallSoftware",
        "Dependencies": [  ],
        "QuestionMessage": "Press 'Accept' to check if you have a proxy active.",
        "OkMessage": "(OK) The proxy isn't active on the Machine.",
        "WarningMessage": "(WARNING) The proxy is active on the Machine. Connection OK.",
        "WarningMessage2": "(WARNING) The proxy is active on the Machine. Connection KO.",
        "DeclineMessage": "return 'You have declined Proxy'",
        "CheckRequirement": "return ./scripts/requirements/proxy.ps1",
        "PostAction": ""
    },
    {
        "Name": "Virtual Machine",
        "Type": "PreInstallSoftware",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to check if you are running the installer on a Virtual Machine or a Physical Machine.",
        "OkMessage": "(OK) The machine you are running the installer is a Physical Machine.",
        "WarningMessage": "'The machine you are running the installer is a Virtual Machine.`r`nPlease be sure to have executed the command:`r`n`\"Set-VMProcessor -VMName <VMName> -ExposeVirtualizationExtensions `$true`\"`r`non Powershell of your Host Machine as Administrator`r`nRemember to Turn Off your Virtual Machine and to replace the <VMName> with the name of the YOUR Virtual Machine.'",
        "WarningMessage2": "",
        "DeclineMessage": "return 'You have declined Virtual Machine'",
        "CheckRequirement": "return ./scripts/requirements/virtual-machine.ps1",
        "PostAction": ""
    },
    {
        "Name": "Proxy npm",
        "Type": "PostInstallSoftware",
        "Dependencies": [
            "npm",
            "Proxy"
        ],
        "QuestionMessage": "Press 'Accept' to check if there is a need to configure npm for proxy.",
        "ExtraMessage": "",
        "PostInstallMessage": "return 'PostInstallMessage'",
        "PostInstallCompleteMessage": "return 'PostInstallCompleteMessage'",
        "PostInstallTrueOkMessage": "return 'The proxy is not active (npm).'",
        "PostInstallTrueOkCommand": "./scripts/postInstallTrueOk/proxy-npm.ps1 -currentDate `$CurrentDate",
        "DeclineMessage": "return `\"You have declined to automatically set your proxy for npm.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "PostInstallCommand": "./scripts/postInstall/proxy-npm.ps1",
        "Attributes": [ ],
        "CheckRequirement": "return ./scripts/requirements/proxy-npm.ps1",
        "PostAction": ""
    },
    {
        "Name": "Proxy Docker",
        "Type": "PostInstallSoftware",
        "Dependencies": [
            "Docker",
            "Proxy"
        ],
        "QuestionMessage": "Press 'Accept' to check if there is a need to configure docker for proxy.",
        "ExtraMessage": "",
        "PostInstallMessage": "return 'PostInstallMessage'",
        "PostInstallCompleteMessage": "return 'PostInstallCompleteMessage'",
        "PostInstallTrueOkMessage": "return 'The proxy is not active (Docker).'",
        "PostInstallTrueOkCommand": "./scripts/postInstallTrueOk/proxy-docker.ps1 -currentDate `$CurrentDate",
        "DeclineMessage": "return `\"You have declined to automatically set your proxy for Docker.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "PostInstallCommand": "./scripts/postInstall/proxy-docker.ps1 -currentDate `$CurrentDate",
        "Attributes": [ ],
        "CheckRequirement": "return ./scripts/requirements/proxy-docker.ps1 -scarConfig `$ScarConfig",
        "PostAction": ""
    },
    {
        "Name": "WSL Version",
        "Type": "PostInstallSoftware",
        "Dependencies": [
            "Wsl Update"
        ],
        "QuestionMessage": "Press 'Accept' to set the default version of WSL to 2.",
        "ExtraMessage": "",
        "PostInstallMessage": "return 'Setting wsl version 2...'",
        "PostInstallCompleteMessage": "return 'Set of wsl version 2 complete.'",
        "PostInstallTrueOkMessage": "return 'Default wsl version already setted to 2.'",
        "PostInstallTrueOkCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically set your default WSL Version.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "PostInstallCommand": "wsl --set-default-version 2",
        "Attributes": [ ],
        "CheckRequirement": "return ./scripts/requirements/proxy-docker.ps1 -scarConfig `$ScarConfig",
        "PostAction": ""
    },
    {
        "Name": "WSL Distribution",
        "Type": "PostInstallSoftware",
        "Dependencies": [
            "Docker"
        ],
        "QuestionMessage": "Press 'Accept' to change the default Linux Distribution of WSL.",
        "ExtraMessage": "",
        "PostInstallMessage": "return ./scripts/messages/wsl-distribution.ps1 -message 'Setting wsl distribution to'",
        "PostInstallCompleteMessage": "return ./scripts/messages/wsl-distribution.ps1 -message 'Set wsl distribution to' complete.",
        "PostInstallTrueOkMessage": "return ./scripts/messages/wsl-distribution.ps1 -message 'Wsl distribution already setted to'",
        "PostInstallTrueOkCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically set your default WSL Distribution.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "PostInstallCommand": "./scripts/postInstall/wsl-distribution.ps1",
        "Attributes": [ ],
        "CheckRequirement": "return ./scripts/requirements/wsl-distribution.ps1 -scarConfig `$ScarConfig",
        "PostAction": ""
    },
    {
        "Name": "VS Code Settings",
        "Type": "PostInstallSoftware",
        "Dependencies": [
            "Visual Studio Code"
        ],
        "QuestionMessage": "Press 'Accept' to set the default integrated terminal to 'Command Prompt' and update mode to 'Manual' for Visual Studio Code.",
        "ExtraMessage": "",
        "PostInstallMessage": "return `\"Updating Visual Studio Code Settings:``r``n- Default Integrated Terminal: Command Prompt``r``n- Update Mode: Manual...`\"",
        "PostInstallCompleteMessage": "return 'Update of Visual Studio Code Settings complete.'",
        "PostInstallTrueOkMessage": "",
        "PostInstallTrueOkCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically Update Visual Studio Code Settings.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "PostInstallCommand": "./scripts/postInstall/vscode-settings.ps1",
        "Attributes": [ ],
        "CheckRequirement": "return ./scripts/requirements/vscode-settings.ps1",
        "PostAction": ""
    },
    {
        "Name": "VS Code Extentions",
        "Type": "PostInstallSoftware",
        "Dependencies": [
            "Visual Studio Code"
        ],
        "QuestionMessage": "Press 'Accept' to install the recommended extentions for Visual Studio Code",
        "ExtraMessage": "",
        "PostInstallMessage": "Installing Visual Studio Code Extentions...",
        "PostInstallCompleteMessage": "Install of Visual Studio Code Extensions complete.",
        "PostInstallTrueOkMessage": "",
        "PostInstallTrueOkCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically Install Visual Studio Code Extensions.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "PostInstallCommand": "./scripts/postInstall/vscode-extensions.ps1 -name $($Requirement.Name) -randomCode `$RandomCode -currentDate `$CurrentDate",
        "Attributes": [
            "Mikael.Angular-BeastCode",
            "steoates.autoimport",
            "HookyQR.beautify",
            "donjayamanne.githistory",
            "christian-kohler.path-intellisense",
            "vscode-icons-team.vscode-icons",
            "redhat.vscode-yaml",
            "ms-vscode.vscode-typescript-tslint-plugin",
            "msjsdiag.debugger-for-chrome",
            "spmeesseman.vscode-taskexplorer",
            "Gruntfuggly.triggertaskonsave",
            "Angular.ng-template"
        ],
        "CheckRequirement": "return ./scripts/requirements/vscode-extensions.ps1 -attributes `\"$($Requirement.Attributes)`\"",
        "PostAction": ""
    },
    {
        "Name": "Administrator",
        "Type": "Permission",
        "Dependencies": [  ],
        "QuestionMessage": "Press 'Accept' to check if you have Administrator permission.",
        "OkMessage": "You have the $($Requirement.Name) permission.",
        "KoMessage": "You don't have the $($Requirement.Name) permission.",
        "DeclineMessage": "return 'You have declined Administrator Permission'",
        "CheckRequirement": "return ./scripts/requirements/administrator.ps1 -isAdmin `$ResultPermission",
        "PostAction": ""
    },
    {
        "Name": "Environment Variable Path",
        "Type": "Env Variable Path",
        "Dependencies": [  ],
        "QuestionMessage": "Press 'Accept' to add the missing Environment Variable Path.",
        "Variable": "Path",
        "Values": "`\"C:\\windows\\system32;C:\\windows\\system32\\wbem;C:\\windows;C:\\windows\\system32\\windowspowershell\\v1.0;C:\\Program Files\\Git\\usr\\bin`\"",
        "Scope": "Machine",
        "AddCommand": "[System.Environment]::SetEnvironmentVariable(`\"$($Requirement.Variable)`\", `\"$env:Path;`\"+`\"$item`\", `\"$($Requirement.Scope)`\")",
        "DeclineMessage": "return `\"You have declined to automatically set your Environment Variable Path.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/env-var-path.ps1 -envToCheck `\"$($Requirement.Values)`\"",
        "PostAction": ""
    },
    {
        "Name": "Windows Subsystem Linux",
        "Type": "Feature",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to enable the Windows feature 'Windows Subsystem for Linux'.",
        "ExtraMessage": "",
        "EnableCommand": "& dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart",
        "DeclineMessage": "return `\"You have declined to automatically enable the Windows feature 'Windows Subsystem Linux'.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/wsl.ps1 -scarConfig `$ScarConfig",
        "PostAction": "Restart"
    },
    {
        "Name": "Virtual Machine Platform",
        "Type": "Feature",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to enable the Windows feature 'Virtual Machine Platform'",
        "ExtraMessage": "",
        "EnableCommand": "& dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart",
        "DeclineMessage": "return `\"You have declined to automatically enable the Windows feature 'Virtual Machine Platform'.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/vm-platform.ps1 -scarConfig `$ScarConfig",
        "PostAction": "Restart"
    },
    {
        "Name": "Setup CaTools.msi",
        "Type": "Software",
        "Dependencies": [
            "WSL Distribution"
        ],
        "QuestionMessage": "Press 'Accept' to download and install the Ca-Tools.msi.",
        "MinVersion": "1.12.0",
        "MaxVersion": "latest",
        "MajorVersion": "",
        "DownloadLink": "https://api.github.com/repos/codearchitects/Ca-Tools/releases/$($Requirement.MaxVersion)",
        "DownloadOutfile": "`\"$HOME\\Downloads\\$RandomCode-Setup-CaTools.msi`\"",
        "ExtraMessage": "",
        "DownloadCommand": "./scripts/download-ca-tools-binary.ps1 -link $($Requirement.DownloadLink) -outPath $($Requirement.DownloadOutfile)",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/setup-catools.ps1 -downloadOutfile $($Requirement.DownloadOutfile)",
        "DeleteCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically download and install Ca-Tools.msi.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/setup-catools.ps1",
        "PostAction": "Reinstall"
    },
    {
        "Name": "Git",
        "Type": "Software",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to download and install Git.",
        "MinVersion": "2.27.0",
        "MaxVersion": "2.34.0",
        "MajorVersion": "2",
        "DownloadLink": "https://github.com/git-for-windows/git/releases/download/v$($Requirement.MaxVersion).windows.1/Git-$($Requirement.MaxVersion)-64-bit.exe",
        "DownloadOutfile": "~\\Downloads\\$RandomCode-Git-x64.exe",
        "ExtraMessage": "",
        "DownloadCommand": "./scripts/download-binary.ps1 -link $($Requirement.DownloadLink) -outPath $($Requirement.DownloadOutfile)",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/git.ps1 -downloadOutFile $($Requirement.DownloadOutFile)",
        "DeleteCommand": "./scripts/remove-binary.ps1 -downloadOutFile $($Requirement.DownloadOutfile)",
        "DeclineMessage": "return `\"You have declined to automatically download and install Git.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/git.ps1 -maxVersion $($Requirement.MajorVersion)",
        "PostAction": ""
    },
    {
        "Name": "Node.js",
        "Type": "Software",
        "Dependencies": [  ],
        "QuestionMessage": "Press 'Accept' to download and install Node.js.",
        "MinVersion": "14.0.0",
        "MaxVersion": "16.13.1",
        "MajorVersion": "16",
        "DownloadLink": "https://nodejs.org/dist/v$($Requirement.MaxVersion)/node-v$($Requirement.MaxVersion)-x64.msi",
        "DownloadOutfile": "`\"$HOME\\Downloads\\$RandomCode-Nodejs-x64.msi`\"",
        "ExtraMessage": "",
        "DownloadCommand": "./scripts/download-binary.ps1 -link $($Requirement.DownloadLink) -outPath $($Requirement.DownloadOutfile)",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/nodejs.ps1 -downloadOutFile $($Requirement.DownloadOutfile)",
        "DeleteCommand": "./scripts/remove-binary.ps1 -downloadOutFile $($Requirement.DownloadOutfile)",
        "DeclineMessage": "return `\"You have declined to automatically download and install Node.js.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/nodejs.ps1 -majorVersion $($Requirement.MajorVersion) ",
        "PostAction": ""
    },
    {
        "Name": "Visual Studio",
        "Type": "Software",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to download and install Visual Studio.",
        "MinVersion": "16",
        "MaxVersion": "17",
        "MajorVersion": "",
        "DownloadLink": "https://aka.ms/vs/17/release/vs_community.exe",
        "DownloadOutfile": "~\\Downloads\\$RandomCode-VisualStudio-$($Requirement.MaxVersion).exe",
        "ExtraMessage": "",
        "DownloadCommand": "./scripts/download-binary.ps1 -link $($Requirement.DownloadLink) -outPath $($Requirement.DownloadOutfile)",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/visual-studio.ps1 -downloadOutFile $($Requirement.DownloadOutFile)",
        "DeleteCommand": "./scripts/remove-binary.ps1 -downloadOutFile $($Requirement.DownloadOutfile)",
        "DeclineMessage": "return `\"You have declined to automatically download and install Visual Studio.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/visual-studio.ps1 -minVersion $($Requirement.MinVersion) -maxVersion $($Requirement.MaxVersion)",
        "PostAction": ""
    },
    {
        "Name": "Visual Studio Code",
        "Type": "Software",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to download and install Visual Studio Code.",
        "MinVersion": "1.60.0",
        "MaxVersion": "1.62.3",
        "MajorVersion": "",
        "DownloadLink": "https://update.code.visualstudio.com/$($Requirement.MaxVersion)/win32-x64-user/stable",
        "DownloadOutfile": "~\\Downloads\\$RandomCode-VSCode-User-x64.exe",
        "ExtraMessage": "",
        "DownloadCommand": "./scripts/download-binary.ps1 -link $($Requirement.DownloadLink) -outPath $($Requirement.DownloadOutfile)",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/vscode.ps1 -downloadOutFile $($Requirement.DownloadOutFile)",
        "DeleteCommand": "./scripts/remove-binary.ps1 -downloadOutFile $($Requirement.DownloadOutfile)",
        "DeclineMessage": "return `\"You have declined to automatically download and install Visual Studio Code.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/vscode.ps1 -minVersion $($Requirement.MinVersion)",
        "PostAction": ""
    },
    {
        "Name": "DotNet Core",
        "Type": "Software",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to download and install .NET Core.",
        "MinVersion": "5.0.0",
        "MaxVersion": "6.0.101",
        "MajorVersion": "6",
        "DownloadLink": "https://download.visualstudio.microsoft.com/download/pr/343dc654-80b0-4f2d-b172-8536ba8ef63b/93cc3ab526c198e567f75169d9184d57/dotnet-sdk-6.0.101-win-x64.exe",
        "DownloadOutfile": "~\\Downloads\\$RandomCode-Dotnet-x64.exe",
        "ExtraMessage": "",
        "DownloadCommand": "./scripts/download-binary.ps1 -link $($Requirement.DownloadLink) -outPath $($Requirement.DownloadOutfile)",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/dotnet-core.ps1 -downloadOutFile $($Requirement.DownloadOutFile)",
        "DeleteCommand": "./scripts/remove-binary.ps1 -downloadOutFile $($Requirement.DownloadOutfile)",
        "DeclineMessage": "return `\"You have declined to automatically download and install .NET Core.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/dotnet-core.ps1 -maxVersion $($Requirement.MajorVersion)",
        "PostAction": ""
    },
    {
        "Name": "Docker",
        "Type": "Software",
        "Dependencies": [
            "Virtual Machine Platform",
            "Wsl Version",
            "Linux Distribution"
        ],
        "QuestionMessage": "Press 'Accept' to download and install Docker Desktop.",
        "MinVersion": "20.0.0",
        "MaxVersion": "20.10.8",
        "MajorVersion": "",
        "DownloadLink": "https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe",
        "DownloadOutfile": "~\\Downloads\\$RandomCode-Docker-x64.exe",
        "ExtraMessage": "",
        "DownloadCommand": "./scripts/download-binary.ps1 -link $($Requirement.DownloadLink) -outPath $($Requirement.DownloadOutfile)",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/docker.ps1 -downloadOutFile $($Requirement.DownloadOutFile)",
        "DeleteCommand": "./scripts/remove-binary.ps1 -downloadOutFile $($Requirement.DownloadOutfile)",
        "DeclineMessage": "return `\"You have declined to automatically download and install Docker.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/docker.ps1 -scarConfig `$ScarConfig -minVersion $($Requirement.MinVersion) -maxVersion $($Requirement.MaxVersion)",
        "PostAction": "Logout"
    },
    {
        "Name": "npm",
        "Type": "Software",
        "Dependencies": [
            "Node.js"
        ],
        "QuestionMessage": "Press 'Accept' to update the version of npm.",
        "MinVersion": "6.0.0",
        "MaxVersion": "6.14.16",
        "MajorVersion": "6",
        "DownloadLink": "",
        "DownloadOutfile": "",
        "ExtraMessage": "",
        "DownloadCommand": "",
        "ArgumentList": "",
        "InstallCommand": "./scripts/install/npm.ps1 -reqMaxVersion $($Requirement.MaxVersion)",
        "DeleteCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically update the version of npm.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/npm.ps1 -majorVersion $($Requirement.MajorVersion)",
        "PostAction": ""
    },
    {
        "Name": "Wsl Update",
        "Type": "Software",
        "Dependencies": [
            "Windows Subsystem Linux"
        ],
        "QuestionMessage": "Press 'Accept' to update the Linux kernel package.",
        "MinVersion": "",
        "MaxVersion": "",
        "MajorVersion": "",
        "DownloadLink": "",
        "DownloadOutfile": "",
        "ExtraMessage": "",
        "DownloadCommand": "",
        "ArgumentList": "",
        "InstallCommand": "wsl --update",
        "DeleteCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically download and install Wsl Update.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/wsl-update.ps1 -scarConfig `$ScarConfig",
        "PostAction": ""
    },
    {
        "Name": "Linux Distribution",
        "Type": "Software",
        "Dependencies": [
            "Windows Subsystem Linux"
        ],
        "QuestionMessage": "Press 'Accept' to download and install the Linux Distribution: 'Ubuntu'.",
        "MinVersion": "18.04",
        "MaxVersion": "20.04",
        "MajorVersion": "",
        "DownloadLink": "",
        "DownloadOutfile": "",
        "ExtraMessage": "Ubuntu",
        "DownloadCommand": "",
        "ArgumentList": "",
        "InstallCommand": "wsl --install -d Ubuntu-$($Requirement.MaxVersion)",
        "DeleteCommand": "",
        "DeclineMessage": "return `\"You have declined to automatically download and install Linux Distriution (Ubuntu 20.04 LTS).`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/linux-distro.ps1 -scarConfig `$ScarConfig -maxVersion $($Requirement.MaxVersion) -minVersion $($Requirement.MinVersion)",
        "PostAction": ""
    },
    {
        "Name": "Registry npm",
        "Type": "Connection",
        "Dependencies": [  ],
        "QuestionMessage": "Press 'Accept' to check if the npm registry (https://registry.npmjs.org) is reachable.",
        "OkMessage": "$($Requirement.Name) is reachable.",
        "KoMessage": "$($Requirement.Name) is unreachable with HTTPS protocol.",
        "TcpMessage": "$($Requirement.Name) is unreachable with TCP protocol.",
        "DeclineMessage": "return 'You have declined Registry npm Connection'",
        "CheckRequirement": "return ./scripts/requirements/npm-registry.ps1",
        "PostAction": ""
    },
    {
        "Name": "Registry NuGet",
        "Type": "Connection",
        "Dependencies": [  ],
        "QuestionMessage": "Press 'Accept' to check if the NuGet registry (https://api.nuget.org/v3/index.json) is reachable.",
        "OkMessage": "$($Requirement.Name) is reachable.",
        "KoMessage": "$($Requirement.Name) is unreachable with HTTPS protocol.",
        "TcpMessage": "$($Requirement.Name) is unreachable with TCP protocol.",
        "DeclineMessage": "return 'You have declined Registry Nuget Connection'",
        "CheckRequirement": "return ./scripts/requirements/nuget-registry.ps1",
        "PostAction": ""
    },
    {
        "Name": "Azure DevOps",
        "Type": "Connection",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to check if Azure DevOps Server (https://devops.codearchitects.com:444/) is reachable.",
        "OkMessage": "$($Requirement.Name) is reachable.",
        "KoMessage": "$($Requirement.Name) is unreachable with HTTPS protocol.",
        "TcpMessage": "$($Requirement.Name) is unreachable with TCP protocol.",
        "DeclineMessage": "return 'You have declined Azure DevOps Connection'",
        "CheckRequirement": "return ./scripts/requirements/azure-devops.ps1",
        "PostAction": ""
    },
    {
        "Name": "Log Repository",
        "Type": "Connection",
        "Dependencies": [ ],
        "QuestionMessage": "Press 'Accept' to check if the Log Repository (ftps://casftp.blob.core.windows.net:22) is reachable.",
        "OkMessage": "$($Requirement.Name) is reachable.",
        "KoMessage": "$($Requirement.Name) is unreachable with FTPS protocol.",
        "TcpMessage": "",
        "DeclineMessage": "return 'You have declined Azure DevOps Connection'",
        "CheckRequirement": "return ./scripts/requirements/log-repository.ps1",
        "PostAction": ""
    },
    {
        "Name": "Npm Login",
        "Type": "Activity",
        "Dependencies": [
            "Setup CaTools.msi"
        ],
        "QuestionMessage": "Press 'Accept' to check if there is an account npm.",
        "PathFile": "",
        "ArgumentList": "",
        "ActivityOKCommand": "`$Description.Text = 'I have found an Azure DevOps account, do you want to login with it?'; `$TokenPath = `\"~/.token.json`\"; `$TokenParsed = Get-Content `$TokenPath | ConvertFrom-Json; `$Index = `$TokenParsed.Count - 1; `$UsernameTextBox.Text = `$TokenParsed[`$Index].user; `$TokenTextBox.Text = `$TokenParsed[`$Index].token; Show-LoginNpmScreen",
        "ActivityKOCommand": "`$Description.Text = 'We have not found any Azure DevOps account.`r`nPlease enter the Azure DevOps Username and the Token.`r`nPS: Insert the Username without the COLLABORATION\\.'; Show-LoginNpmScreen",
        "DeclineMessage": "return `\"You have declined to automatically login to npm.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return ./scripts/requirements/npm-login.ps1 -currentDate `$currentDate",
        "PostAction": "Login"
    },
    {
        "Name": "Install CAEP",
        "Type": "Activity",
        "Dependencies": [
            "Npm Login"
        ],
        "QuestionMessage": "Press 'Accept' to install the Code Architects Enterprise Platform (CAEP)",
        "PathFile": "C:\\Program Files\\Ca-Tools\\setup-ca-platform.exe",
        "ArgumentList": "-s",
        "ActivityOKCommand": "",
        "ActivityKOCommand": "`$Description.Text += '`r`nInstalling the CAEP... (It will take a few minutes)'; `$NameNoSpaces = (`\"$($Requirement.Name)`\".replace(' ', '')); `$Logfile = `\"~\\.ca\\`$NameNoSpaces-$CurrentDate.log`\"; npm install -g @ca/cli; ca plugins:install @ca/cli-plugin-scarface",
        "DeclineMessage": "return `\"You have declined to automatically install CAEP.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return @(`$true, 'KO')",
        "PostAction": ""
    },
    {
        "Name": "Generate Scarface Config",
        "Type": "Activity",
        "Dependencies": [
            "Install CAEP"
        ],
        "QuestionMessage": "Press 'Accept' to download the scarface.config.json.",
        "PathFile": "C:\\dev\\scarface\\scarface.config.json",
        "ArgumentList": "",
        "ActivityOKCommand": "",
        "ActivityKOCommand": "New-Item -Path $($Requirement.PathFile) -Force; `$ScarConfigObj = (Invoke-WebRequest -Uri `$ScarConfig -UseBasicParsing).Content | ConvertFrom-Json; `$MaxDate = 0; `$TokenPath = `\"~/.token.json`\"; `$TokenList = Get-Content `$TokenPath | ConvertFrom-Json; foreach(`$t in `$TokenList) { `$CurrentDate = `$t.date.Replace(`\"-`\", `\"`\"); if (`$MaxDate -lt `$CurrentDate) { `$MaxDate = `$CurrentDate; `$TokenObj = `$t } }; `$ScarConfigObj.token = `$TokenObj.token; `$ScarConfigObj.user = `$TokenObj.user; if (`$ScarVersion -ne '') { `$ScarConfigObj.version = `$ScarVersion }; `$ScarConfigObj | ConvertTo-Json | Set-Content -Path $($Requirement.PathFile); `$Description.Text += '`r`nDownloading the file scarface.config.json...`r`nDownload complete.'",
        "DeclineMessage": "return `\"You have declined to automatically Generate scarface.config.json.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement":  "return @(`$true, 'KO')",
        "PostAction": ""
    },
    {
        "Name": "Execute ca scar",
        "Type": "Activity",
        "Dependencies": [
            "Generate Scarface Config"
        ],
        "QuestionMessage": "Press 'Accept' to run the command 'ca scar'",
        "PathFile": "~\\AppData\\Roaming\\npm\\ca.cmd",
        "ArgumentList": "scar -c C:\\dev\\scarface\\scarface.config.json",
        "ActivityOKCommand": "",
        "ActivityKOCommand": "`$Description.Text += '`r`nExecuting the command ca scar...'; `$NameNoSpaces = (`\"$($Requirement.Name)`\".replace(' ', '')); `$Logfile = `\"~\\.ca\\`$NameNoSpaces-$CurrentDate.log`\"; Set-Location 'C:\\dev\\scarface'; Start-Process `\"$($Requirement.PathFile)`\" -ArgumentList 'scar:setup' -NoNewWindow -Wait; Start-Process `\"$($Requirement.PathFile)`\" -ArgumentList `\"$($Requirement.ArgumentList)`\" -NoNewWindow -Wait; `$Description.Text += '`r`The command ca scar was executed correctly.`r`nPress the End button to conclude the installation.'",
        "DeclineMessage": "return `\"You have declined to automatically execute 'ca scar'.`r`nTo continue with the installation check the documentation https://caep.codearchitects.com/docs/framework/caep-code-architects-enterprise-platform/`\"",
        "CheckRequirement": "return @(`$true, 'KO')",
        "PostAction": "End"
    }
]
